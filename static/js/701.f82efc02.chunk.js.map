{"version":3,"file":"static/js/701.f82efc02.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n    border: 1px solid gray;\n    border-radius: 5px;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background: rgb(128, 201, 135);\n    box-shadow: gray 1px 1px 5px;\n`;\n\nexport const FormLabel = styled.label`\n    font-size: 28px;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 15px;\n    gap: 5px;\n`;\n\nexport const Input = styled.input`\n    width: 300px;\n    height: 30px;\n    border-radius: 4px;\n    font-size: 20px;\n`;\n\nexport const Button = styled.button`\n    margin: 0px auto;\n    border-radius: 4px;\n    padding: 5px 10px;\n    background: rgb(98, 134, 157);\n    color: white;\n    font-size: 18px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Form, FormLabel, Input, Button } from './ContactForm.styled';\n\nimport { addContact } from 'redux/operations';\nimport Notiflix from 'notiflix';\n\nconst ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const dispatch = useDispatch();\n    const contactsList = useSelector(state => state.contacts.contactsList);\n\n    const handleChange = event => {\n        switch (event.target.name) {\n            case 'name':\n                setName(event.target.value);\n                break;\n\n            case 'number':\n                setNumber(event.target.value);\n                break;\n\n            default:\n                break;\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (\n            contactsList.filter(\n                item => item.name.toLowerCase() === name.toLowerCase()\n            ).length\n        ) {\n            Notiflix.Notify.warning(`${name} is already in contacts`);\n        } else {\n            dispatch(addContact({ name, number }));\n            Notiflix.Notify.success(\n                'Contact successfully added to contact book'\n            );\n        }\n\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <div>\n            <Form onSubmit={handleSubmit}>\n                <FormLabel>\n                    Name\n                    <Input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </FormLabel>\n                <FormLabel>\n                    Number\n                    <Input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        value={number}\n                        onChange={handleChange}\n                    />\n                </FormLabel>\n                <Button type=\"submit\">Add contact</Button>\n            </Form>\n        </div>\n    );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const WrapperFilter = styled.div`\n    text-align: center;\n`;\n\nexport const FilterLabel = styled.label`\n    font-size: 28px;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 15px;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const FilterInput = styled.input`\n    width: 300px;\n    height: 30px;\n    border-radius: 4px;\n    font-size: 20px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { changeFilter } from 'redux/filterSlice';\n\nimport { FilterLabel, FilterInput, WrapperFilter } from './Filter.styled';\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n\n    const filter = useSelector(state => state.filter);\n\n    const filterChange = event => {\n        dispatch(changeFilter(event.target.value));\n    };\n\n    return (\n        <WrapperFilter>\n            <FilterLabel>\n                Find contacts by name\n                <FilterInput\n                    type=\"text\"\n                    value={filter}\n                    onChange={filterChange}\n                />\n            </FilterLabel>\n        </WrapperFilter>\n    );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const ContactListWrapper = styled.ul`\n    list-style: none;\n    padding: 0;\n`;\n\nexport const ContactListItem = styled.li`\n    padding: 10px 20px;\n    border: 1px solid black;\n    border-radius: 6px;\n    margin-bottom: 15px;\n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    font-size: 26px;\n`;\n\nexport const ContactName = styled.p`\n    margin-bottom: 10px;\n`;\n\nexport const ContactButton = styled.button`\n    border-radius: 4px;\n    padding: 5px 10px;\n    background: rgb(6, 106, 45);\n    color: white;\n    font-size: 18px;\n\tcursor: pointer;\n`;","import PropTypes from 'prop-types';\n\nimport {\n    ContactListWrapper,\n    ContactListItem,\n    ContactName,\n    ContactButton,\n} from './ContactList.styled';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { fetchContacts, deleteContact } from 'redux/operations';\n\nconst ContactList = () => {\n    const contacts = useSelector(state => state.contacts.contactsList);\n    const filter = useSelector(state => state.filter);\n\n    const dispatch = useDispatch();\n\n    const getVisibleContacts = () => {\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n        );\n    };\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const vilibleContact = getVisibleContacts();\n\n    return (\n        <div>\n            <ContactListWrapper>\n                {vilibleContact.map(contact => {\n                    return (\n                        <ContactListItem key={contact.id}>\n                            <div>\n                                <ContactName>{contact.name}:</ContactName>\n                                <p>{contact.number}</p>\n                            </div>\n                            <ContactButton\n                                type=\"button\"\n                                onClick={() =>\n                                    dispatch(deleteContact(contact.id))\n                                }\n                            >\n                                Delete\n                            </ContactButton>\n                        </ContactListItem>\n                    );\n                })}\n            </ContactListWrapper>\n        </div>\n    );\n};\n\nContactList.propTypes = {\n    vilibleContact: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        })\n    ),\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const H1 = styled.h1`\n    color: rgb(24, 23, 23);\n    text-align: center;\n    font-size: 30px;\n    margin-bottom: 15px;\n`;\n\nexport const H2 = styled.h2`\n    color: rgb(24, 23, 23);\n    text-align: center;\n    font-size: 25px;\n    margin-top: 15px;\n    margin-bottom: 10px;\n`;\n\nexport const Wrapper = styled.div`\n    background-color: rgb(129, 159, 237);\n    margin: 0px auto;\n    padding: 20px;\n    width: 450px;\n    border-radius: 8px;\n    box-shadow: rgba(0, 0, 0, 0.12) 4px 1px 4px, rgba(0, 0, 0, 0.06) 0px 4px 4px,\n        rgba(0, 0, 0, 0.16) 1px 4px 6px;\n`;","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport { Wrapper, H1, H2 } from 'components/App/App.styled';\nimport { useSelector } from 'react-redux';\n\nconst Contacts = () => {\n    const contacts = useSelector(state => state.contacts.contactsList);\n    const filter = useSelector(state => state.filter);\n\n    const getVisibleContacts = () => {\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n        );\n    };\n\n    const vilibleContact = getVisibleContacts();\n\n    return (\n        <div>\n            <Wrapper>\n                <H1>Phonebook</H1>\n                <ContactForm />\n                <H2>Contacts</H2>\n                <Filter />\n                <ContactList vilibleContact={vilibleContact} />\n            </Wrapper>\n        </div>\n    );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","FormLabel","Input","Button","useState","name","setName","number","setNumber","dispatch","useDispatch","contactsList","useSelector","state","contacts","handleChange","event","target","value","onSubmit","preventDefault","filter","item","toLowerCase","length","Notiflix","addContact","type","pattern","title","required","onChange","WrapperFilter","FilterLabel","FilterInput","changeFilter","ContactListWrapper","ContactListItem","ContactName","ContactButton","useEffect","fetchContacts","vilibleContact","contact","includes","map","onClick","deleteContact","id","H1","H2","Wrapper"],"sourceRoot":""}